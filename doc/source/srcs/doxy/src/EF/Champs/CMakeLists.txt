file(GLOB srcs [A-Z|a-z]*.cpp [A-Z|a-z]*.c [A-Z|a-z]*.f)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}  ${TRUST_ROOT}/include/backward  ${TRUST_ROOT}/src/EF/Geometrie  ${TRUST_ROOT}/src/ThHyd/Incompressible/Milieu  ${TRUST_ROOT}/src/ThHyd/Turbulence/Lois_Paroi  ${TRUST_ROOT}/src/ThHyd/Turbulence/Operateurs  ${TRUST_ROOT}/src/ThHyd/Turbulence/Modeles  ${TRUST_ROOT}/src/ThHyd/Incompressible/Cond_Lim  ${TRUST_ROOT}/src/Kernel/Champs  ${TRUST_ROOT}/src/Kernel/Champs/Champs_Don  ${TRUST_ROOT}/src/Kernel/Cond_Lim  ${TRUST_ROOT}/src/Kernel/Champs_dis  ${TRUST_ROOT}/src/Kernel/Framework  ${TRUST_ROOT}/src/Kernel/Geometrie  ${TRUST_ROOT}/src/Kernel/Math/Matrices  ${TRUST_ROOT}/src/Kernel/Math  ${TRUST_ROOT}/src/Kernel/Utilitaires  ${TRUST_ROOT}/src/Kernel/VF/Geometrie )
add_library(obj_ef_champs OBJECT  ${srcs} )
set(listlibs ${listlibs} ef_champs PARENT_SCOPE    )
add_custom_target(check_sources_ef_champs   COMMAND check_sources.sh ${CMAKE_CURRENT_SOURCE_DIR} ) #COMMENT  "checking code validity ef_champs" )
add_DEPENDENCIES(obj_ef_champs check_sources_ef_champs)
if(COMPIL_DYN)
  add_library(ef_champs SHARED   $<TARGET_OBJECTS:obj_ef_champs> )
  install(TARGETS ef_champs  DESTINATION lib)
endif(COMPIL_DYN)
