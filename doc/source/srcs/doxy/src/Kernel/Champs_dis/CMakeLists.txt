file(GLOB srcs [A-Z|a-z]*.cpp [A-Z|a-z]*.c [A-Z|a-z]*.f)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}  ${TRUST_ROOT}/include/backward  ${TRUST_ROOT}/src/Kernel/Champs  ${TRUST_ROOT}/src/Kernel/Champs/Champs_Don  ${TRUST_ROOT}/src/Kernel/Framework  ${TRUST_ROOT}/src/Kernel/Geometrie  ${TRUST_ROOT}/src/Kernel/ICoCo  ${TRUST_ROOT}/src/Kernel/Math/Matrices  ${TRUST_ROOT}/src/Kernel/Math/SolvSys  ${TRUST_ROOT}/src/Kernel/Math  ${TRUST_ROOT}/src/Kernel/Statistiques_temps  ${TRUST_ROOT}/src/Kernel/Utilitaires  ${TRUST_ROOT}/src/Kernel/VF/Geometrie  ${TRUST_ROOT}/src/Kernel/Cond_Lim)
add_library(obj_kernel_champs_dis OBJECT  ${srcs} )
set(listlibs ${listlibs} kernel_champs_dis PARENT_SCOPE    )
add_custom_target(check_sources_kernel_champs_dis   COMMAND check_sources.sh ${CMAKE_CURRENT_SOURCE_DIR} ) #COMMENT  "checking code validity kernel_champs_dis" )
add_DEPENDENCIES(obj_kernel_champs_dis check_sources_kernel_champs_dis)
if(COMPIL_DYN)
  add_library(kernel_champs_dis SHARED   $<TARGET_OBJECTS:obj_kernel_champs_dis> )
  install(TARGETS kernel_champs_dis  DESTINATION lib)
endif(COMPIL_DYN)
