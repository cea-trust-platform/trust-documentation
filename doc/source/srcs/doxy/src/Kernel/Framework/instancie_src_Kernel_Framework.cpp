//
// Warning : DO NOT EDIT ! file generated automatically
// TRUST_NO_INDENT
//
#include <verifie_pere.h>
#include <Assembleur.h>
#include <Associer.h>
#include <Ch_front_var_instationnaire_dep.h>
#include <Champ.h>
#include <Champ_Don.h>
#include <Champ_Fonc.h>
#include <Champ_Generique.h>
#include <Champ_Inc.h>
#include <Champ_front.h>
#include <Champs_Fonc.h>
#include <Champs_compris.h>
#include <Cond_lim.h>
#include <Cond_lim_utilisateur_base.h>
#include <Conds_lim.h>
#include <Correlation.h>
#include <Couplage_U.h>
#include <Debog_Pb.h>
#include <Diametre_hyd_champ.h>
#include <Discretiser.h>
#include <Domaine_Cl_dis.h>
#include <Domaine_dis.h>
#include <Equation.h>
#include <Format_Post.h>
#include <Format_Post_Lata.h>
#include <Format_Post_Lml.h>
#include <Format_Post_XYZ.h>
#include <Iterateur_Source.h>
#include <Lecture_Champ.h>
#include <List_Equations_Scalaires_Passifs_Especes.h>
#include <Liste_Champ_Generique.h>
#include <Loi_Fermeture_Test.h>
#include <Loi_horaire.h>
#include <Milieu.h>
#include <Parametre_equation.h>
#include <Porosites_champ.h>
#include <Postraitement.h>
#include <Postraitements.h>
#include <Probleme_Couple.h>
#include <Resoudre.h>
#include <Schema_Temps.h>
#include <Solveur_Implicite.h>
#include <Solveur_Masse.h>
#include <Sonde.h>
#include <Sonde_Int.h>
#include <Sondes.h>
#include <Sondes_Int.h>
#include <Source.h>
#include <Source_Generique_P0_Elem.h>
#include <Sources.h>
#include <Sous_domaine_dis.h>
#include <Testeur.h>
#include <Value_Input_Int.h>
void instancie_src_Kernel_Framework() {
Cerr << "src_Kernel_Framework" << finl;
Assembleur inst1;verifie_pere(inst1);
Associer inst2;verifie_pere(inst2);
Ch_front_var_instationnaire_dep inst3;verifie_pere(inst3);
Champ inst4;verifie_pere(inst4);
Champ_Don inst5;verifie_pere(inst5);
Champ_Fonc inst6;verifie_pere(inst6);
Champ_Generique inst7;verifie_pere(inst7);
Champ_Inc inst8;verifie_pere(inst8);
Champ_front inst9;verifie_pere(inst9);
Champs_Fonc inst10;verifie_pere(inst10);
Champs_compris inst11;verifie_pere(inst11);
Cond_lim inst12;verifie_pere(inst12);
cl_timp inst13;verifie_pere(inst13);
paroi_adiabatique inst14;verifie_pere(inst14);
paroi_flux_impose inst15;verifie_pere(inst15);
paroi_contact inst16;verifie_pere(inst16);
paroi_contact_rayo inst17;verifie_pere(inst17);
paroi_contact_fictif inst18;verifie_pere(inst18);
paroi_contact_fictif_rayo inst19;verifie_pere(inst19);
Conds_lim inst20;verifie_pere(inst20);
Correlation inst21;verifie_pere(inst21);
Couplage_U inst22;verifie_pere(inst22);
Debog_Pb inst23;verifie_pere(inst23);
Debog_Pb_Wrapper inst24;verifie_pere(inst24);
Diametre_hyd_champ inst25;verifie_pere(inst25);
Discretiser inst26;verifie_pere(inst26);
Domaine_Cl_dis inst27;verifie_pere(inst27);
Domaine_dis inst28;verifie_pere(inst28);
Equation inst29;verifie_pere(inst29);
Format_Post inst30;verifie_pere(inst30);
Format_Post_Lata inst31;verifie_pere(inst31);
Format_Post_Lml inst32;verifie_pere(inst32);
Format_Post_XYZ inst33;verifie_pere(inst33);
Iterateur_Source inst34;verifie_pere(inst34);
Lecture_Champ inst35;verifie_pere(inst35);
List_Equations_Scalaires_Passifs_Especes inst36;verifie_pere(inst36);
Liste_Champ_Generique inst37;verifie_pere(inst37);
Loi_Fermeture_Test inst38;verifie_pere(inst38);
Loi_horaire inst39;verifie_pere(inst39);
Milieu inst40;verifie_pere(inst40);
Parametre_equation inst41;verifie_pere(inst41);
Porosites_champ inst42;verifie_pere(inst42);
Porosites inst43;verifie_pere(inst43);
Postraitement inst44;verifie_pere(inst44);
Postraitements inst45;verifie_pere(inst45);
Probleme_Couple inst46;verifie_pere(inst46);
Resoudre inst47;verifie_pere(inst47);
Schema_Temps inst48;verifie_pere(inst48);
Solveur_Implicite inst49;verifie_pere(inst49);
Solveur_Masse inst50;verifie_pere(inst50);
Sonde inst51;verifie_pere(inst51);
Sonde_Int inst52;verifie_pere(inst52);
Sondes inst53;verifie_pere(inst53);
Sondes_Int inst54;verifie_pere(inst54);
Source inst55;verifie_pere(inst55);
Source_Generique_P0_Elem inst56;verifie_pere(inst56);
Sources inst57;verifie_pere(inst57);
Sous_domaine_dis inst58;verifie_pere(inst58);
Testeur inst59;verifie_pere(inst59);
Value_Input_Int inst60;verifie_pere(inst60);
}
