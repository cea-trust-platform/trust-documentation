file(GLOB srcs [A-Z|a-z]*.cpp [A-Z|a-z]*.c [A-Z|a-z]*.f)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}  ${TRUST_ROOT}/include/backward  ${TRUST_MED_ROOT}/include  ${TRUST_ROOT}/src/Kernel/Champs  ${TRUST_ROOT}/src/Kernel/Champs/Champs_Don  ${TRUST_ROOT}/src/Kernel/Champs_dis  ${TRUST_ROOT}/src/Kernel/Cond_Lim  ${TRUST_ROOT}/src/Kernel/Geometrie  ${TRUST_ROOT}/src/Kernel/ICoCo  ${TRUST_ROOT}/src/Kernel/MEDimpl  ${TRUST_ROOT}/src/Kernel/Math/Matrices  ${TRUST_ROOT}/src/Kernel/Math/SolvSys  ${TRUST_ROOT}/src/Kernel/Math  ${TRUST_ROOT}/src/Kernel/Operateurs  ${TRUST_ROOT}/src/Kernel/Schemas_Temps  ${TRUST_ROOT}/src/Kernel/Solveurs  ${TRUST_ROOT}/src/Kernel/Statistiques_temps  ${TRUST_ROOT}/src/Kernel/Utilitaires  ${TRUST_ROOT}/src/Kernel/VF/Geometrie )
add_library(obj_kernel_framework OBJECT  ${srcs} )
set(listlibs ${listlibs} kernel_framework PARENT_SCOPE    )
add_custom_target(check_sources_kernel_framework   COMMAND check_sources.sh ${CMAKE_CURRENT_SOURCE_DIR} ) #COMMENT  "checking code validity kernel_framework" )
add_DEPENDENCIES(obj_kernel_framework check_sources_kernel_framework)
if(COMPIL_DYN)
  add_library(kernel_framework SHARED   $<TARGET_OBJECTS:obj_kernel_framework> )
  install(TARGETS kernel_framework  DESTINATION lib)
endif(COMPIL_DYN)
